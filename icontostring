#!/usr/bin/perl
use strict;
use warnings;

use vars qw( $file $fh $rc $suf $a $b $c $d @samples $string 
	     %output $ofile );

undef $/;
for $file (@ARGV) {
  if($file =~ /(.*)[.]([48])x[48]$/) {
    $ofile = $1 . '.str';
    $suf   = $2;
  } else {
    warn "No correct suffix: $file\n";
    next;
  }
  open($fh, '<', $file) || die "$0: $file: $!\n";
  
  @samples = split(/\s+/, <$fh>);
  close $fh;

  if($suf == 8) { i8x8(); } else { i4x4(); }
}

for $ofile (keys %output) {
  $a = $output{$ofile}[0];
  $b = $output{$ofile}[1];

  if (!defined($a) or !defined($b)) {
    warn "Missing a part for $ofile\n";
    next;
  }
  open($fh, '>', $ofile) || die "$0: can't save $ofile: $!\n";
  print $fh $a, $b;
  close $fh;
}

# an 8x8 image:
#   P2
#   8 8
#   255
#   128 196 180 52 33 130 194 181
#   134 180 32 62 78 38 149 186
#   80 76 35 74 41 85 76 157
#   148 36 64 31 6 82 67 123
#   86 41 61 40 6 62 72 111
#   87 73 37 89 77 54 48 116
#   105 128 47 45 65 41 103 149
#   123 141 142 93 86 140 152 163
sub i8x8 {
  my $check = shift(@samples);
  if ($check ne 'P2') { warn "$0: $file is not ascii pgm\n"; return undef }

  $check = shift(@samples);
  if ($check != 8) { warn "$0: $file is not 8 wide\n"; return undef }
  $check = shift(@samples);
  if ($check != 8) { warn "$0: $file is not 8 tall\n"; return undef }
  $check = shift(@samples);
  if ($check != 255) { warn "$0: $file is not 8 bit\n"; return undef }

  if (64 != @samples) {
    warn "$0: unexpected sample count in $file: got " . scalar @samples
    	 . " instead of 64\n";
    return undef;
  }

  # just inside four corners of an 8x8 image
  #   00 01 02 03 04 05 06 07
  #   08 09 10 11 12 13 14 15
  #   16 17 18 19 20 21 22 23
  #   24 25 26 27 28 29 30 31
  #   32 33 34 35 36 37 38 39
  #   40 41 42 43 44 45 46 47
  #   48 49 50 51 52 53 54 55
  #   56 57 58 59 60 61 62 63
  $a = $samples[9];
  $b = $samples[14];
  $c = $samples[29];
  $d = $samples[54];

  $output{$ofile}[0] = "$a $b $c $d\n";
}

# a 4x4 image:
#   P3
#   4 4
#   255
#   181 157 125  122 69 47  121 52 33  205 173 137
#   185 47 24  72 47 27  75 49 32  156 91 56
#   162 39 11  81 51 34  72 44 31  136 72 40
#   153 118 87  135 65 38  146 62 37  171 137 99
sub i4x4 {
  my $check = shift(@samples);
  if ($check ne 'P3') { warn "$0: $file is not ascii ppm\n"; return undef }

  $check = shift(@samples);
  if ($check != 4) { warn "$0: $file is not 4 wide\n"; return undef }
  $check = shift(@samples);
  if ($check != 4) { warn "$0: $file is not 4 tall\n"; return undef }
  $check = shift(@samples);
  if ($check != 255) { warn "$0: $file is not 8 bit\n"; return undef }

  if (48 != @samples) {
    warn "$0: unexpected sample count in $file: got " . scalar @samples
    	 . " instead of 48\n";
    return undef;
  }

  # ints to hex
  @samples = map { sprintf("%02x", $_) } @samples;

  $output{$ofile}[1] = join('', @samples) . "\n";
}

